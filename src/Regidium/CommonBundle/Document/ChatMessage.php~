<?php

namespace Regidium\CommonBundle\Document;

use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;
use Symfony\Component\Validator\Constraints as Assert;

use Regidium\CommonBundle\Document\User;

/**
 * @MongoDB\Document(
 *      repositoryClass="Regidium\CommonBundle\Repository\ChatMessageRepository",
 *      collection="chat_messages",
 *      requireIndexes=false
 *  )
 *
 */
class ChatMessage
{
    /**
     * @MongoDB\Id
     */
    private $id;

    /**
     * @MongoDB\String
     * @MongoDB\UniqueIndex(safe="true")
     */
    private $uid;

    /**
     * @MongoDB\String
     */
    private $model_type;

    /**
     * @MongoDB\Index
     * @MongoDB\ReferenceOne(targetDocument="Regidium\CommonBundle\Document\Chat", cascade={"all"}, inversedBy="messages")
     */
    private $chat;

    /**
     * @MongoDB\Timestamp
     */
    private $created;

    /**
     * @MongoDB\Timestamp
     */
    private $updated;

    /**
     * @MongoDB\String
     */
    private $text;

    /**
     * @MongoDB\Index
     * @MongoDB\ReferenceOne(targetDocument="Regidium\CommonBundle\Document\Person", cascade={"all"}, inversedBy="output_messages")
     */
    private $sender;

    /**
     * @MongoDB\Index
     * @MongoDB\ReferenceOne(targetDocument="Regidium\CommonBundle\Document\Person", cascade={"all"}, inversedBy="input_messages")
     */
    private $receiver;

    /**
     * @Assert\NotBlank
     * @MongoDB\Int
     */
    private $sender_status;

    /**
     * @Assert\NotBlank
     * @MongoDB\Int
     */
    private $receiver_status;

    /* =============== Constants =============== */

    const STATUS_NOT_READED = 1;
    const STATUS_DEFAULT = 2;
    const STATUS_ARCHIVED = 3;
    const STATUS_DELETED = 4;

    static public function getStatuses()
    {
        return array(
            self::STATUS_NOT_READED,
            self::STATUS_DEFAULT,
            self::STATUS_ARCHIVED,
            self::STATUS_DELETED
        );
    }

    /* =============== General =============== */

    public function __construct()
    {
        $this->setUid(uniqid());
        $this->setCreated(time());
        $this->setUpdated(time());
        $this->setSenderStatus(self::STATUS_DEFAULT);
        $this->setReceiverStatus(self::STATUS_NOT_READED);

        $this->setModelType('chat_message');
    }

    public function __toString()
    {
        return $this->text;
    }

    /* =============== Get/Set=============== */

    /**
     * Set id
     *
     * @param string $id
     * @return self
     */
    public function setId($id)
    {
        $this->id = $id;
        return $this;
    }

    /**
     * Get id
     *
     * @return string $id
     */
    public function getId()
    {
        return $this->id;
    }
}
